{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Technische Dokumentation von edi.substanceforms Die Software und die vollst\u00e4ndige Online-Dokumentation finden Sie hier: edi.substanceforms . Autor: Seppo Walther (seppo.walther@educorvi.de) Zusammenfassung Mit dem Add-On edi.substanceforms f\u00fcr das freie Web-Content-Management-System Plone wird die Online-Datenbank Emissionsarme Produkte der Berufsgenossenschaft Energie Textil Elektro und Medienerzeugnisse (BG ETEM) realisiert. Mit Hilfe dieser Online-Datenbank k\u00f6nnen Unternehmerinnen und Unternehmer, Arbeitssch\u00fctzer und Verantwortliche in den Betrieben der Branche Druck und Papierverarbeitung Chemikalienprodukte finden deren Einsatz in der Produktionsumgebung mit m\u00f6glichst geringen Gesundheitsgefahren f\u00fcr die damit in Kontakt stehenden Besch\u00e4ftigten verbunden ist. Die Entwicklung des Plone-Add-On war Gegenstand der Projektarbeit von Seppo Walther im Rahmen der Ausbildung zum Fachinformatiker f\u00fcr Anwendungsentwicklung und wurde dem Pr\u00fcfungsausschuss der IHK N\u00fcrnberg f\u00fcr Mittelfranken zur Bewertung vorgelegt. Auch wenn es unwahrscheinlich erscheint, dass die hier entwickelte Software 1:1 in anderen Umgebungen oder f\u00fcr vergleichbare Anwendungsf\u00e4lle eingesetzt werden kann, so liefert das Projekt doch verschiedene Hinweise und Softwarebestandteile f\u00fcr vergleichbare Projekte. Es wurde daher entschieden, das Projekt als Beispiell\u00f6sung auf der Plattfom [Github] zu ver\u00f6ffentlichen. Technische Voraussetzugen f\u00fcr den Einsatz von edi.substanceforms Lauff\u00e4hige Datenbank auf Basis von PostgreSQL Installation von Python >= 3.8 Lauff\u00e4hige Installation (Buildout) des Web CMS Plone in der Version >= 5.2.4 Installation von edi.substanceforms f\u00fcr das Web-CMS Plone Git Clone von edi.substanceforms in das \"src\" Verzeichnis der Plone-Installation git clone https://github.com/educorvi/edi.substanceforms.git Eintr\u00e4ge in der Datei buildout.cfg der Plone-Installation: eggs: ... edi.substanceforms develop: ... src/edi.substanceforms Durchf\u00fchrung eines neuen Buildouts im Wurzelverzeichnis der Plone-Installation: ./bin buildout Installation des neuen Produkts im Plone Controlpanel","title":"Home"},{"location":"#technische-dokumentation-von-edisubstanceforms","text":"Die Software und die vollst\u00e4ndige Online-Dokumentation finden Sie hier: edi.substanceforms . Autor: Seppo Walther (seppo.walther@educorvi.de)","title":"Technische Dokumentation von edi.substanceforms"},{"location":"#zusammenfassung","text":"Mit dem Add-On edi.substanceforms f\u00fcr das freie Web-Content-Management-System Plone wird die Online-Datenbank Emissionsarme Produkte der Berufsgenossenschaft Energie Textil Elektro und Medienerzeugnisse (BG ETEM) realisiert. Mit Hilfe dieser Online-Datenbank k\u00f6nnen Unternehmerinnen und Unternehmer, Arbeitssch\u00fctzer und Verantwortliche in den Betrieben der Branche Druck und Papierverarbeitung Chemikalienprodukte finden deren Einsatz in der Produktionsumgebung mit m\u00f6glichst geringen Gesundheitsgefahren f\u00fcr die damit in Kontakt stehenden Besch\u00e4ftigten verbunden ist. Die Entwicklung des Plone-Add-On war Gegenstand der Projektarbeit von Seppo Walther im Rahmen der Ausbildung zum Fachinformatiker f\u00fcr Anwendungsentwicklung und wurde dem Pr\u00fcfungsausschuss der IHK N\u00fcrnberg f\u00fcr Mittelfranken zur Bewertung vorgelegt. Auch wenn es unwahrscheinlich erscheint, dass die hier entwickelte Software 1:1 in anderen Umgebungen oder f\u00fcr vergleichbare Anwendungsf\u00e4lle eingesetzt werden kann, so liefert das Projekt doch verschiedene Hinweise und Softwarebestandteile f\u00fcr vergleichbare Projekte. Es wurde daher entschieden, das Projekt als Beispiell\u00f6sung auf der Plattfom [Github] zu ver\u00f6ffentlichen.","title":"Zusammenfassung"},{"location":"#technische-voraussetzugen-fur-den-einsatz-von-edisubstanceforms","text":"Lauff\u00e4hige Datenbank auf Basis von PostgreSQL Installation von Python >= 3.8 Lauff\u00e4hige Installation (Buildout) des Web CMS Plone in der Version >= 5.2.4","title":"Technische Voraussetzugen f\u00fcr den Einsatz von edi.substanceforms"},{"location":"#installation-von-edisubstanceforms-fur-das-web-cms-plone","text":"Git Clone von edi.substanceforms in das \"src\" Verzeichnis der Plone-Installation git clone https://github.com/educorvi/edi.substanceforms.git Eintr\u00e4ge in der Datei buildout.cfg der Plone-Installation: eggs: ... edi.substanceforms develop: ... src/edi.substanceforms Durchf\u00fchrung eines neuen Buildouts im Wurzelverzeichnis der Plone-Installation: ./bin buildout Installation des neuen Produkts im Plone Controlpanel","title":"Installation von edi.substanceforms f\u00fcr das Web-CMS Plone"},{"location":"anforderungen/","text":"Anforderungsanalyse Die Anforderungsanalye ist f\u00fcr die hier vorliegende technische Dokumentation vor allem vor dem Hintergrund des Verst\u00e4ndnisses f\u00fcr die technischen Zusammenh\u00e4nge der realisierten Softwarel\u00f6sung von Bedeutung. Dieses Kapitel ist deshalb als Gegen\u00fcberstellung der Kundenanforderungen mit den im Projekt entwickelten Artefakten zu verstehen. Bedienbarkeit \u00fcber das Web-CMS Plone Die folgenden Anforderungen werden durch die im Projekt entwickelten Nutzerformulare und Einzelansichten erf\u00fcllt: Formulare zum Anlegen von Herstellern und Chemikalienprodukten durch die Autoren und Redakteure mit integrierter Plausibilit\u00e4tspr\u00fcfung und Speicherung im RDBMS Einzelansichten f\u00fcr Hersteller und Chemikalienprodukte und Auflistung von deren Eigenschaften f\u00fcr den redaktionellen Prozess M\u00f6glichkeit zur L\u00f6schung von einzelnen Datenbankobjekten aus den Einzelansichten Formulare zur Aktualisierung von Herstellern und Chemikalienprodukten Suche nach Produkten und Herstellern im Rahmen des redaktionellen Prozesses (keine Endbenutzersuche) Au\u00dferdem waren die folgenden Punkte zu ber\u00fccksichtigen und wurden entsprechend umgesetzt: Nutzung der Benutzerverwaltung des Web-CMS Plone und des Rechte- und Rollenkonzeptes von Plone Entwicklung der CMS-Artikeltypen \"Datenbank\" und \"Tabelle\". Die Inhaltstypen erlauben den Autoren und Redakteuren den freien Aufbau einer Navigationsstruktur innerhalb des CMS, stellen die technische Verbindung zu den Datenbankobjekten her und erlauben die Nutzung des Berechtigungskonzeptes von Plone bis auf die Ebene der Datenbanktabellen. Entwicklung von Methoden zur expliziten Pr\u00fcfung der Rollen von Benutzern im Kontext der Formulare mit denen einzelne Datens\u00e4tze bearbeitet werden k\u00f6nnen: userCanEdit , pr\u00fcft das Schreibrecht von Benutzern userCanReview , pr\u00fcft das Recht von Benutzern zur Ver\u00f6ffentlichung F\u00fcr die Artikeltypen Datenbank und Tabelle verwenden wir einen eigenen Workflow, der die Berechtigungen f\u00fcr die Status wie folgt definiert: privat: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Owner und Manager Entwurf: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Editor und Manger, Leserecht f\u00fcr Reviewer zur Ver\u00f6ffentlichung eingereicht: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Reviewer und Manager, Leserecht f\u00fcr Editor Ver\u00f6ffentlicht: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Reviewer und Manager, Leserecht f\u00fcr Anonymous Responsive Webdesign Auch hier ist das CMS Plone hilfreich. Plone selbst unterst\u00fctzt von Haus aus Responsive Webdesign. Das Webdesign des Kunden verwendet au\u00dferdem Bootstrap als CSS- und Javascript- Basis. Dementsprechend wurde f\u00fcr die Realisierung aller HTML-Templates im Projekt der HTML-Markup des Bootstrap Frameworks in der Version 4.6 verwendet. Bootstrap teilt jeden Bildschirm in ein Raster aus 12 Spalten ein und ordnet den Endger\u00e4ten je nach Gr\u00f6\u00dfe des tats\u00e4chlichen physikalische Bildschirms eine von 4 Bildschirmgr\u00f6\u00dfen: xs (extra-small), sm (small), md (medium) und lg (large) zu. In den Templates des Plone-Add-Ons wird definiert, welche Template-Elemente bei welcher Bildschirmgr\u00f6\u00dfe wie viele Spalten einnehmen sollen. So l\u00e4sst sich beispielsweise an einem Arbeitsplatzcomputer ein Bild neben einer Tabelle anzeigen, w\u00e4hrend es am Smartphone nicht m\u00f6glich ist und deshalb automatisch (responsive) unter der Tabelle angezeigt wird. Barrierefreiheit gem\u00e4\u00df BITV 2.0 (WCAG 2.1 Level AA) TODO:Bildhandling \u00fcberarbeiten! Bei korrekter Verwendung des HTML-Markups von Bootstrap ist die Barrierefreiheit aus technischer Sicht gew\u00e4hrleistet. Ausserdem wird in den Formularen zum Upload und zum Update der Bilder zu Herstellern und Chemikalienprodukten sichergestellt, dass Texte f\u00fcr Titel, und Bildbeschreibung angegeben werden k\u00f6nnen. Die Bilder selbst werden als Artikel im CMS Plone gespeichert. In den Einzelansichten f\u00fcr Hersteller und Chemikalienprodukte werden die Titel- und Beschreibungstexte in den \\ Tags verwendet: title = Titel des Bildes alt = Kurzbeschreibung des Bildes (au\u00dferdem Verwendung in der Bildunterschrift) Integrit\u00e4t der gespeicherten Daten TODO:Datenbankdesign erw\u00e4hnen? - ja! Die Integrit\u00e4t der gespeicherten Daten wird durch Datentypisierung und fachliche Plausibilit\u00e4tspr\u00fcfungen sichergestellt. Somit wird jeder von den Autoren und Redakteuren eingetragene Wert sowohl im Hinblick auf das Datenformat als auch im Hinblick auf die fachliche Richtigkeit hin gepr\u00fcft.","title":"Anforderungsanalye"},{"location":"anforderungen/#anforderungsanalyse","text":"Die Anforderungsanalye ist f\u00fcr die hier vorliegende technische Dokumentation vor allem vor dem Hintergrund des Verst\u00e4ndnisses f\u00fcr die technischen Zusammenh\u00e4nge der realisierten Softwarel\u00f6sung von Bedeutung. Dieses Kapitel ist deshalb als Gegen\u00fcberstellung der Kundenanforderungen mit den im Projekt entwickelten Artefakten zu verstehen.","title":"Anforderungsanalyse"},{"location":"anforderungen/#bedienbarkeit-uber-das-web-cms-plone","text":"Die folgenden Anforderungen werden durch die im Projekt entwickelten Nutzerformulare und Einzelansichten erf\u00fcllt: Formulare zum Anlegen von Herstellern und Chemikalienprodukten durch die Autoren und Redakteure mit integrierter Plausibilit\u00e4tspr\u00fcfung und Speicherung im RDBMS Einzelansichten f\u00fcr Hersteller und Chemikalienprodukte und Auflistung von deren Eigenschaften f\u00fcr den redaktionellen Prozess M\u00f6glichkeit zur L\u00f6schung von einzelnen Datenbankobjekten aus den Einzelansichten Formulare zur Aktualisierung von Herstellern und Chemikalienprodukten Suche nach Produkten und Herstellern im Rahmen des redaktionellen Prozesses (keine Endbenutzersuche) Au\u00dferdem waren die folgenden Punkte zu ber\u00fccksichtigen und wurden entsprechend umgesetzt: Nutzung der Benutzerverwaltung des Web-CMS Plone und des Rechte- und Rollenkonzeptes von Plone Entwicklung der CMS-Artikeltypen \"Datenbank\" und \"Tabelle\". Die Inhaltstypen erlauben den Autoren und Redakteuren den freien Aufbau einer Navigationsstruktur innerhalb des CMS, stellen die technische Verbindung zu den Datenbankobjekten her und erlauben die Nutzung des Berechtigungskonzeptes von Plone bis auf die Ebene der Datenbanktabellen. Entwicklung von Methoden zur expliziten Pr\u00fcfung der Rollen von Benutzern im Kontext der Formulare mit denen einzelne Datens\u00e4tze bearbeitet werden k\u00f6nnen: userCanEdit , pr\u00fcft das Schreibrecht von Benutzern userCanReview , pr\u00fcft das Recht von Benutzern zur Ver\u00f6ffentlichung F\u00fcr die Artikeltypen Datenbank und Tabelle verwenden wir einen eigenen Workflow, der die Berechtigungen f\u00fcr die Status wie folgt definiert: privat: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Owner und Manager Entwurf: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Editor und Manger, Leserecht f\u00fcr Reviewer zur Ver\u00f6ffentlichung eingereicht: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Reviewer und Manager, Leserecht f\u00fcr Editor Ver\u00f6ffentlicht: Lese- und Schreibrechte f\u00fcr die CMS-Rollen Reviewer und Manager, Leserecht f\u00fcr Anonymous","title":"Bedienbarkeit \u00fcber das Web-CMS Plone"},{"location":"anforderungen/#responsive-webdesign","text":"Auch hier ist das CMS Plone hilfreich. Plone selbst unterst\u00fctzt von Haus aus Responsive Webdesign. Das Webdesign des Kunden verwendet au\u00dferdem Bootstrap als CSS- und Javascript- Basis. Dementsprechend wurde f\u00fcr die Realisierung aller HTML-Templates im Projekt der HTML-Markup des Bootstrap Frameworks in der Version 4.6 verwendet. Bootstrap teilt jeden Bildschirm in ein Raster aus 12 Spalten ein und ordnet den Endger\u00e4ten je nach Gr\u00f6\u00dfe des tats\u00e4chlichen physikalische Bildschirms eine von 4 Bildschirmgr\u00f6\u00dfen: xs (extra-small), sm (small), md (medium) und lg (large) zu. In den Templates des Plone-Add-Ons wird definiert, welche Template-Elemente bei welcher Bildschirmgr\u00f6\u00dfe wie viele Spalten einnehmen sollen. So l\u00e4sst sich beispielsweise an einem Arbeitsplatzcomputer ein Bild neben einer Tabelle anzeigen, w\u00e4hrend es am Smartphone nicht m\u00f6glich ist und deshalb automatisch (responsive) unter der Tabelle angezeigt wird.","title":"Responsive Webdesign"},{"location":"anforderungen/#barrierefreiheit-gema-bitv-20-wcag-21-level-aa","text":"TODO:Bildhandling \u00fcberarbeiten! Bei korrekter Verwendung des HTML-Markups von Bootstrap ist die Barrierefreiheit aus technischer Sicht gew\u00e4hrleistet. Ausserdem wird in den Formularen zum Upload und zum Update der Bilder zu Herstellern und Chemikalienprodukten sichergestellt, dass Texte f\u00fcr Titel, und Bildbeschreibung angegeben werden k\u00f6nnen. Die Bilder selbst werden als Artikel im CMS Plone gespeichert. In den Einzelansichten f\u00fcr Hersteller und Chemikalienprodukte werden die Titel- und Beschreibungstexte in den \\ Tags verwendet: title = Titel des Bildes alt = Kurzbeschreibung des Bildes (au\u00dferdem Verwendung in der Bildunterschrift)","title":"Barrierefreiheit gem\u00e4\u00df BITV 2.0 (WCAG 2.1 Level AA)"},{"location":"anforderungen/#integritat-der-gespeicherten-daten","text":"TODO:Datenbankdesign erw\u00e4hnen? - ja! Die Integrit\u00e4t der gespeicherten Daten wird durch Datentypisierung und fachliche Plausibilit\u00e4tspr\u00fcfungen sichergestellt. Somit wird jeder von den Autoren und Redakteuren eingetragene Wert sowohl im Hinblick auf das Datenformat als auch im Hinblick auf die fachliche Richtigkeit hin gepr\u00fcft.","title":"Integrit\u00e4t der gespeicherten Daten"},{"location":"anhang/","text":"Anh\u00e4nge Anhang 1: Datenbankmodell Bild \u00f6ffnen Anhang 2: Aktivit\u00e4tendiagramm Gefahrstoffgemisch anlegen Bild \u00f6ffnen Anhang 3: Verzeichnis der Funktionstests Bild \u00f6ffnen Anhang 4: Abk\u00fcrzungsverzeichnis Bild \u00f6ffnen","title":"Anh\u00e4nge"},{"location":"anhang/#anhange","text":"","title":"Anh\u00e4nge"},{"location":"anhang/#anhang-1-datenbankmodell","text":"Bild \u00f6ffnen","title":"Anhang 1: Datenbankmodell"},{"location":"anhang/#anhang-2-aktivitatendiagramm-gefahrstoffgemisch-anlegen","text":"Bild \u00f6ffnen","title":"Anhang 2: Aktivit\u00e4tendiagramm Gefahrstoffgemisch anlegen"},{"location":"anhang/#anhang-3-verzeichnis-der-funktionstests","text":"Bild \u00f6ffnen","title":"Anhang 3: Verzeichnis der Funktionstests"},{"location":"anhang/#anhang-4-abkurzungsverzeichnis","text":"Bild \u00f6ffnen","title":"Anhang 4: Abk\u00fcrzungsverzeichnis"},{"location":"anhang1/","text":"Test 1 2 3 4 5","title":"Anhang 1"},{"location":"anhang1/#test-1-2-3-4-5","text":"","title":"Test 1 2 3 4 5"},{"location":"aufbau/","text":"Aufbau des Software-Packages Bild \u00f6ffnen","title":"Aufbau des Software-Packages"},{"location":"aufbau/#aufbau-des-software-packages","text":"Bild \u00f6ffnen","title":"Aufbau des Software-Packages"},{"location":"ausgang/","text":"Ausgangsituation Die Berufsgenossenschaft Energie Textil Elektro Medienerzeugnisse (BG ETEM) pflegt f\u00fcr die Betriebe der Branche Druck und Papierverarbeitung eine Online-Datenbank mit speziellen Chemikalien und Chemikaliengeschmischen, die in den Produktionsprozessen der Branche Druck- und Papiervararbeitung zum Einsatz kommen. Zielsetzung des Bereiches Pr\u00e4vention der BG ETEM ist es, \u00fcber diese Online-Datenbank auf die in den Chemikalien enthaltenen Gefahrstoffe hinzuweisen, und die Unternehmerinnen, Unternehmer und Arbeitssch\u00fctzer zu motivieren, vor allem die Chemikalienprodukte einzusetzen, die mit m\u00f6glichst geringen Gesundheitsgefahren f\u00fcr die Besch\u00e4ftigten der Branche verbunden sind. So ist beispielsweise bei Chemikaliengemischen darauf zu achten, dass ein m\u00f6glichst hoher Flammpunkt f\u00fcr einen geringen Eintrag von giftigen D\u00e4mpfen in die Atemluft steht und dass Druckbest\u00e4ubungspuder verwendet werden, die eine bestimmte Mindest-,K\u00f6rnungsgr\u00f6\u00dfe aufweisen, um nicht lungeng\u00e4ngig zu sein. Die Online-Datenbank tr\u00e4gt deshalb den Namen Emissionsarme Produkte . Die Datenbank wurde auf Basis des Web-Content-Management-Systems Plone entwickelt. Die Eigenschaften der Chemikalienprodukte, deren Inhaltsstoffe, Hersteller und vieles mehr wurden bislang in einer objektorientierten Datenbank. Die redaktionelle Arbeit zur Bearbeitung und Pflege sowie auch die Rechere der Endbenutzer erfolgte \u00fcber die Leistungsmerkmale des CMS Plone. Sowohl die Oberfl\u00e4chen f\u00fcr die Benutzer, Autoren und Redakteure als auch die Datenstrukturen in dieser Datenbank sind veraltet. Die M\u00f6glichkeit, Chemikalien gezielt nach gewissen Parametern zu durchsuchen, ist aufgrund der technischen Eigenschaften der objektorientierten Datenbank nur sehr eingeschr\u00e4nkt. Zu den Chemikalienprodukten geh\u00f6ren: Wasch- und Reinigungsmittel f\u00fcr den Offsetdruck Sonderreiniger f\u00fcr die manuelle Anwendung im Offsetdruck Reinigungsmittel im Etikettendruck Staubarme Druckbest\u00e4ubungspuder","title":"Ausgangssituation"},{"location":"ausgang/#ausgangsituation","text":"Die Berufsgenossenschaft Energie Textil Elektro Medienerzeugnisse (BG ETEM) pflegt f\u00fcr die Betriebe der Branche Druck und Papierverarbeitung eine Online-Datenbank mit speziellen Chemikalien und Chemikaliengeschmischen, die in den Produktionsprozessen der Branche Druck- und Papiervararbeitung zum Einsatz kommen. Zielsetzung des Bereiches Pr\u00e4vention der BG ETEM ist es, \u00fcber diese Online-Datenbank auf die in den Chemikalien enthaltenen Gefahrstoffe hinzuweisen, und die Unternehmerinnen, Unternehmer und Arbeitssch\u00fctzer zu motivieren, vor allem die Chemikalienprodukte einzusetzen, die mit m\u00f6glichst geringen Gesundheitsgefahren f\u00fcr die Besch\u00e4ftigten der Branche verbunden sind. So ist beispielsweise bei Chemikaliengemischen darauf zu achten, dass ein m\u00f6glichst hoher Flammpunkt f\u00fcr einen geringen Eintrag von giftigen D\u00e4mpfen in die Atemluft steht und dass Druckbest\u00e4ubungspuder verwendet werden, die eine bestimmte Mindest-,K\u00f6rnungsgr\u00f6\u00dfe aufweisen, um nicht lungeng\u00e4ngig zu sein. Die Online-Datenbank tr\u00e4gt deshalb den Namen Emissionsarme Produkte . Die Datenbank wurde auf Basis des Web-Content-Management-Systems Plone entwickelt. Die Eigenschaften der Chemikalienprodukte, deren Inhaltsstoffe, Hersteller und vieles mehr wurden bislang in einer objektorientierten Datenbank. Die redaktionelle Arbeit zur Bearbeitung und Pflege sowie auch die Rechere der Endbenutzer erfolgte \u00fcber die Leistungsmerkmale des CMS Plone. Sowohl die Oberfl\u00e4chen f\u00fcr die Benutzer, Autoren und Redakteure als auch die Datenstrukturen in dieser Datenbank sind veraltet. Die M\u00f6glichkeit, Chemikalien gezielt nach gewissen Parametern zu durchsuchen, ist aufgrund der technischen Eigenschaften der objektorientierten Datenbank nur sehr eingeschr\u00e4nkt. Zu den Chemikalienprodukten geh\u00f6ren: Wasch- und Reinigungsmittel f\u00fcr den Offsetdruck Sonderreiniger f\u00fcr die manuelle Anwendung im Offsetdruck Reinigungsmittel im Etikettendruck Staubarme Druckbest\u00e4ubungspuder","title":"Ausgangsituation"},{"location":"bestandteile/","text":"Bestandteile der Applikation (Module und Klassen) Alle entwickelten Bestandteile des Projekts befinden sich im Plone-Add-On edi.substanceforms . Dieses Add-on beinhaltet beinhaltet Artikeltypen Content-Types (Artikeltypen), mit denen in Plone die Inhalte der Seiten gepflegt werden, sowie alle ben\u00f6tigten Formulare und Ansichten (Forms und Views), f\u00fcr das Management der Chemikalienprodukte mit dem CMS Plone. Die Bestandteile der Applikation werden in den folgenden Abschnitten detaillierter beschrieben. F\u00fcr die Erstellung der Plone-Inhaltstypen (Content-Types, Viewklassen, Viewtemplates...) kommt der Generator mrbob zum Einsatz. Dieser erm\u00f6glicht den Fokus auf die essentielle Programmierung und Anpassung der Inhaltstypen durch massive Zeitersparnisse gegen\u00fcber des manuellen Anlegens. Artikeltypen f\u00fcr die Pflege von Inhalten Die Content-Types haben f\u00fcr die Autoren und Redakteure eine besondere Bedeutung. Mit deren Hilfe werden in der Struktur der Plone-Site Inhalte angelegt um diese f\u00fcr Benutzerinnen und Benutzer zu pr\u00e4sentieren. Daneben k\u00f6nnen in den Content-Types Daten gespeichert werden, die f\u00fcr die Steuerung der Anwendung ben\u00f6tigt werden. Das Package edi.substanceforms beinhaltet folgende Content-Types: Datenbank Die Datenbank Emissionsarme Produkte kann mit diesem Artikeltyp an beliebiger Stelle in der Inhaltsstruktur der Website eingebunden werden. Die Autoren und Redakteure k\u00f6nnen mit entsprechenden Feldern die Datenbank beschreiben und f\u00fcr die Benutzerinnen und Benutzer pr\u00e4sentieren. Au\u00dferdem stellt die Datenbank die technische Verbindung zur physikalischen Datenbank her. D.h. es werden mit diesem Artikeltyp alle notwendigen Parameter f\u00fcr die Verbindung zur Datenbank gespeichert. Aus der Sicht des Web-CMS-Plone stellt die Datenbank einen Ordnertyp dar in dem Objekte vom Content-Type Tabelle gespeichert werden. Tabelle Der Content-Typ Tabelle stellt die technische Verbindung zu den Tabellen der physikalischen Datenbank her. Bereits beim Anlegen des Content-Types in Plone wird der Autor und Redakteur gefragt, welche der Tabellen der Datenbank angezeigt werden soll. Mit dem Content-Typ Tabelle wird die Absicht verfolgt im Context einer Tabelle die darin gespeicherten Datens\u00e4tze anzuzeigen als w\u00e4ren sie selbst als Objekte im CMS Plone gespeichert. Aus der Sicht des Web-CMS Plone stellt die Datenbank ebenfalls einen Ordnertyp dar, in dem Dateiobjekte (Bilder, PDF-Dateien) gespeichert werden, die f\u00fcr die Pr\u00e4sentation der Datens\u00e4tze, also z.B. Hersteller, Chemikalienprodukte ben\u00f6tigt werden. F\u00fcr die Speicherung dieser Objekte wird ganz bewusst die objektorientierte Datenbank genutzt. In den Datens\u00e4tzen werden Referenzen zu den Dateiobjekten gehalten. Formulare Formulare werden nach dem CRUD-Begriff ( CR eate, U pdate, D elete) f\u00fcr folgende Anwendungsf\u00e4lle ben\u00f6tigt: Hinzuf\u00fcgen von Datens\u00e4tzen in die Datenbank (create) Aktualisierung von Datens\u00e4tzen in der Datenbank (update) Das L\u00f6schen von Datens\u00e4tzen wird mit einem funktionalen View realisiert. Ausserdem wird ein Formular f\u00fcr die Suche von Datens\u00e4tzen in der Datenbank ben\u00f6tigt. Views Einzelansicht f\u00fcr die Datenbank In der Einzelansicht f\u00fcr die Datenbank (datanbank_view.pt) werden vorher zum CMS hinzugef\u00fcgte Tabellen der Datenbank angezeigt. Eine Tabelle repr\u00e4sentiert ihrerseits Hersteller oder Chemikalienprodukte. Einzelansicht f\u00fcr die Tabelle Die Einzelansicht f\u00fcr die Tabelle (tabelle_view.pt) dient dem Listing aller Datens\u00e4tze in der Tabelle und enth\u00e4lt entsprechende Suchparameter, nach denen die Trefferliste bei Bedarf gefiltert werden kann. So ist beispielsweise der Ausschluss aller Gefahrstoffgemische m\u00f6glich, die nicht als Sonderreiniger definiert sind. Einzelansicht f\u00fcr Hersteller und Gefahrstoffprodukte F\u00fcr jede Art von Produkten gibt es ein individuelles Viewtemplate. In diesem Viewtemplate wird eine Tabelle erzeugt, in der die entsprechenden Eigenschaften des Produktes zur Anzeige gebracht werden. Au\u00dferdem erfolgt hier die Darstellung der gespeicherten Bilder. Folgende Viewtemplates sind vorhanden: substance_view.pt substance_mixture_view.pt spray_powder_view.pt manufacturer_view.pt Viele in der Datenbank gespeicherte Werte sind nicht lesbar. Daher erfolgt in der Viewklasse single_view.py, welche allen Einzelansichten zugrunde liegt, die Key-Value-Zuweisung und die \u00dcbersetzung von Werten. Funktionale Views Ein funktionaler View zeichnet sich dadurch aus, entweder kein eigenes Template zu besitzen, oder eines das auf die Best\u00e4tigung einer Aktion beschr\u00e4nkt ist. Zu den funktionalen Views geh\u00f6ren: Delete View single-View ... So besitzt bespielsweise der Delete View ein Template zur Best\u00e4tigung des L\u00f6schens des Artikels per Auswahl einer Checkbox, w\u00e4hrend in den single-view alle Methoden der Einzelansichten ausgelagert wurden.","title":"Bestandteile der Applikation"},{"location":"bestandteile/#bestandteile-der-applikation-module-und-klassen","text":"Alle entwickelten Bestandteile des Projekts befinden sich im Plone-Add-On edi.substanceforms . Dieses Add-on beinhaltet beinhaltet Artikeltypen Content-Types (Artikeltypen), mit denen in Plone die Inhalte der Seiten gepflegt werden, sowie alle ben\u00f6tigten Formulare und Ansichten (Forms und Views), f\u00fcr das Management der Chemikalienprodukte mit dem CMS Plone. Die Bestandteile der Applikation werden in den folgenden Abschnitten detaillierter beschrieben. F\u00fcr die Erstellung der Plone-Inhaltstypen (Content-Types, Viewklassen, Viewtemplates...) kommt der Generator mrbob zum Einsatz. Dieser erm\u00f6glicht den Fokus auf die essentielle Programmierung und Anpassung der Inhaltstypen durch massive Zeitersparnisse gegen\u00fcber des manuellen Anlegens.","title":"Bestandteile der Applikation (Module und Klassen)"},{"location":"bestandteile/#artikeltypen-fur-die-pflege-von-inhalten","text":"Die Content-Types haben f\u00fcr die Autoren und Redakteure eine besondere Bedeutung. Mit deren Hilfe werden in der Struktur der Plone-Site Inhalte angelegt um diese f\u00fcr Benutzerinnen und Benutzer zu pr\u00e4sentieren. Daneben k\u00f6nnen in den Content-Types Daten gespeichert werden, die f\u00fcr die Steuerung der Anwendung ben\u00f6tigt werden. Das Package edi.substanceforms beinhaltet folgende Content-Types:","title":"Artikeltypen f\u00fcr die Pflege von Inhalten"},{"location":"bestandteile/#datenbank","text":"Die Datenbank Emissionsarme Produkte kann mit diesem Artikeltyp an beliebiger Stelle in der Inhaltsstruktur der Website eingebunden werden. Die Autoren und Redakteure k\u00f6nnen mit entsprechenden Feldern die Datenbank beschreiben und f\u00fcr die Benutzerinnen und Benutzer pr\u00e4sentieren. Au\u00dferdem stellt die Datenbank die technische Verbindung zur physikalischen Datenbank her. D.h. es werden mit diesem Artikeltyp alle notwendigen Parameter f\u00fcr die Verbindung zur Datenbank gespeichert. Aus der Sicht des Web-CMS-Plone stellt die Datenbank einen Ordnertyp dar in dem Objekte vom Content-Type Tabelle gespeichert werden.","title":"Datenbank"},{"location":"bestandteile/#tabelle","text":"Der Content-Typ Tabelle stellt die technische Verbindung zu den Tabellen der physikalischen Datenbank her. Bereits beim Anlegen des Content-Types in Plone wird der Autor und Redakteur gefragt, welche der Tabellen der Datenbank angezeigt werden soll. Mit dem Content-Typ Tabelle wird die Absicht verfolgt im Context einer Tabelle die darin gespeicherten Datens\u00e4tze anzuzeigen als w\u00e4ren sie selbst als Objekte im CMS Plone gespeichert. Aus der Sicht des Web-CMS Plone stellt die Datenbank ebenfalls einen Ordnertyp dar, in dem Dateiobjekte (Bilder, PDF-Dateien) gespeichert werden, die f\u00fcr die Pr\u00e4sentation der Datens\u00e4tze, also z.B. Hersteller, Chemikalienprodukte ben\u00f6tigt werden. F\u00fcr die Speicherung dieser Objekte wird ganz bewusst die objektorientierte Datenbank genutzt. In den Datens\u00e4tzen werden Referenzen zu den Dateiobjekten gehalten.","title":"Tabelle"},{"location":"bestandteile/#formulare","text":"Formulare werden nach dem CRUD-Begriff ( CR eate, U pdate, D elete) f\u00fcr folgende Anwendungsf\u00e4lle ben\u00f6tigt: Hinzuf\u00fcgen von Datens\u00e4tzen in die Datenbank (create) Aktualisierung von Datens\u00e4tzen in der Datenbank (update) Das L\u00f6schen von Datens\u00e4tzen wird mit einem funktionalen View realisiert. Ausserdem wird ein Formular f\u00fcr die Suche von Datens\u00e4tzen in der Datenbank ben\u00f6tigt.","title":"Formulare"},{"location":"bestandteile/#views","text":"","title":"Views"},{"location":"bestandteile/#einzelansicht-fur-die-datenbank","text":"In der Einzelansicht f\u00fcr die Datenbank (datanbank_view.pt) werden vorher zum CMS hinzugef\u00fcgte Tabellen der Datenbank angezeigt. Eine Tabelle repr\u00e4sentiert ihrerseits Hersteller oder Chemikalienprodukte.","title":"Einzelansicht f\u00fcr die Datenbank"},{"location":"bestandteile/#einzelansicht-fur-die-tabelle","text":"Die Einzelansicht f\u00fcr die Tabelle (tabelle_view.pt) dient dem Listing aller Datens\u00e4tze in der Tabelle und enth\u00e4lt entsprechende Suchparameter, nach denen die Trefferliste bei Bedarf gefiltert werden kann. So ist beispielsweise der Ausschluss aller Gefahrstoffgemische m\u00f6glich, die nicht als Sonderreiniger definiert sind.","title":"Einzelansicht f\u00fcr die Tabelle"},{"location":"bestandteile/#einzelansicht-fur-hersteller-und-gefahrstoffprodukte","text":"F\u00fcr jede Art von Produkten gibt es ein individuelles Viewtemplate. In diesem Viewtemplate wird eine Tabelle erzeugt, in der die entsprechenden Eigenschaften des Produktes zur Anzeige gebracht werden. Au\u00dferdem erfolgt hier die Darstellung der gespeicherten Bilder. Folgende Viewtemplates sind vorhanden: substance_view.pt substance_mixture_view.pt spray_powder_view.pt manufacturer_view.pt Viele in der Datenbank gespeicherte Werte sind nicht lesbar. Daher erfolgt in der Viewklasse single_view.py, welche allen Einzelansichten zugrunde liegt, die Key-Value-Zuweisung und die \u00dcbersetzung von Werten.","title":"Einzelansicht f\u00fcr Hersteller und Gefahrstoffprodukte"},{"location":"bestandteile/#funktionale-views","text":"Ein funktionaler View zeichnet sich dadurch aus, entweder kein eigenes Template zu besitzen, oder eines das auf die Best\u00e4tigung einer Aktion beschr\u00e4nkt ist. Zu den funktionalen Views geh\u00f6ren: Delete View single-View ... So besitzt bespielsweise der Delete View ein Template zur Best\u00e4tigung des L\u00f6schens des Artikels per Auswahl einer Checkbox, w\u00e4hrend in den single-view alle Methoden der Einzelansichten ausgelagert wurden.","title":"Funktionale Views"},{"location":"lizenz/","text":"Lizenzvereinbarung f\u00fcr edi.substanceforms F\u00fcr jedes Softwareprodukt ist es von essentieller Bedeutung, Rechte und Anspr\u00fcche auf das geistige Eigentum zu definieren und zu sch\u00fctzen. Hierf\u00fcr werden meist Lizenzen verwendet, die gewisse Rechte klar festlegen. In unserer Firma folgen wir dem Open Source Gedanken und stellen unsere Software der Community frei zur Verf\u00fcgung. Im Gegenzug bedienen wir uns an anderen Open Source Projekten, die uns als Grundlage f\u00fcr unsere Software dienen. So kommt f\u00fcr die gesamte Software und die Dokumentation die MIT-Lizenz zum Einsatz. F\u00fcr die MIT Lizenz habe ich mich entschieden, da sie Business- und Open Source freundlich ist, die Verwendung durch Andere erm\u00f6glicht ohne deren gesamten propriet\u00e4ren Quellcode aufzudecken zu m\u00fcssen (eine Nennung in der Lizenzangabe gen\u00fcgt), gleichzeitig jedoch im Gegensatz zu GPL weiterhin eine Monetarisierung m\u00f6glich macht. Die Dokumentation in gedruckter Form, sprich der PDF Export, ist unter CC BY 4.0 lizensiert. Diese Lizenz habe ich gew\u00e4hlt, da Sie die Verwendung, Ver\u00e4nderung und Ver\u00f6ffentlichung durch Andere (sogar f\u00fcr die kommerzielle Nutzung) erm\u00f6glicht, jedoch eine Nennung des Urhebers voraussetzt.","title":"Lizenz"},{"location":"lizenz/#lizenzvereinbarung-fur-edisubstanceforms","text":"F\u00fcr jedes Softwareprodukt ist es von essentieller Bedeutung, Rechte und Anspr\u00fcche auf das geistige Eigentum zu definieren und zu sch\u00fctzen. Hierf\u00fcr werden meist Lizenzen verwendet, die gewisse Rechte klar festlegen. In unserer Firma folgen wir dem Open Source Gedanken und stellen unsere Software der Community frei zur Verf\u00fcgung. Im Gegenzug bedienen wir uns an anderen Open Source Projekten, die uns als Grundlage f\u00fcr unsere Software dienen. So kommt f\u00fcr die gesamte Software und die Dokumentation die MIT-Lizenz zum Einsatz. F\u00fcr die MIT Lizenz habe ich mich entschieden, da sie Business- und Open Source freundlich ist, die Verwendung durch Andere erm\u00f6glicht ohne deren gesamten propriet\u00e4ren Quellcode aufzudecken zu m\u00fcssen (eine Nennung in der Lizenzangabe gen\u00fcgt), gleichzeitig jedoch im Gegensatz zu GPL weiterhin eine Monetarisierung m\u00f6glich macht. Die Dokumentation in gedruckter Form, sprich der PDF Export, ist unter CC BY 4.0 lizensiert. Diese Lizenz habe ich gew\u00e4hlt, da Sie die Verwendung, Ver\u00e4nderung und Ver\u00f6ffentlichung durch Andere (sogar f\u00fcr die kommerzielle Nutzung) erm\u00f6glicht, jedoch eine Nennung des Urhebers voraussetzt.","title":"Lizenzvereinbarung f\u00fcr edi.substanceforms"},{"location":"plone/","text":"Installation und Konfiguration im CMS Plone Das Package edi.substanceforms wird auf der Plattform GitHub gehostet. Um edi.substanceforms im Web-Content-Management-System Plone zu installieren, wird das Package zun\u00e4chst via git clone in das Sourcen-Verzeichns (src) der Buildout-Installation heruntergeladen und f\u00fcr die Installation in der Datei buildout.cfg eingetragen. Die Installation erfolgt dann im Rahmen des Buildout-Prozesses {buildout-home}$ cd src {buildout-home}/src$ git clone https://github.com/educorvi/edi.substanceforms.git Eintr\u00e4ge in der Datei buildout.cfg der Plone-Installation: eggs: ... edi.substanceforms develop: ... src/edi.substanceforms Durchf\u00fchrung eines neuen Buildouts im Wurzelverzeichnis der Plone-Installation: {buildout-home}$ ./bin buildout Anschlie\u00dfend kann der Plone-Client hochgefahren werden, dies geschieht mit dem Befehl: {buildout-home}$ ./bin/{instance} start Danach muss das Package in den Plone-Einstellungen installiert werden. --> Einstellungen ({url}/@@plone_control_panel) --> edi.substanceforms --> Installieren Das Package wurde nun erfolgreich installiert und ist einsatzbereit. Nun kann mit dem Hinzuf\u00fcgen einer Datenbank begonnnen werden.","title":"Installation und Konfiguration im CMS Plone"},{"location":"plone/#installation-und-konfiguration-im-cms-plone","text":"Das Package edi.substanceforms wird auf der Plattform GitHub gehostet. Um edi.substanceforms im Web-Content-Management-System Plone zu installieren, wird das Package zun\u00e4chst via git clone in das Sourcen-Verzeichns (src) der Buildout-Installation heruntergeladen und f\u00fcr die Installation in der Datei buildout.cfg eingetragen. Die Installation erfolgt dann im Rahmen des Buildout-Prozesses {buildout-home}$ cd src {buildout-home}/src$ git clone https://github.com/educorvi/edi.substanceforms.git Eintr\u00e4ge in der Datei buildout.cfg der Plone-Installation: eggs: ... edi.substanceforms develop: ... src/edi.substanceforms Durchf\u00fchrung eines neuen Buildouts im Wurzelverzeichnis der Plone-Installation: {buildout-home}$ ./bin buildout Anschlie\u00dfend kann der Plone-Client hochgefahren werden, dies geschieht mit dem Befehl: {buildout-home}$ ./bin/{instance} start Danach muss das Package in den Plone-Einstellungen installiert werden. --> Einstellungen ({url}/@@plone_control_panel) --> edi.substanceforms --> Installieren Das Package wurde nun erfolgreich installiert und ist einsatzbereit. Nun kann mit dem Hinzuf\u00fcgen einer Datenbank begonnnen werden.","title":"Installation und Konfiguration im CMS Plone"},{"location":"tests/","text":"Automatische Testverfahren Die Entwicklung von edi.substanceforms wurde im grunds\u00e4tzlichen Ansatz testgetrieben durchgef\u00fchrt. Wie im Kapitel \"Bestandteile\" beschrieben, wurden die Inhaltstypen Datenbank und Tabelle sowie alle Ansichten (Views) und Formulare (Forms) wurden zun\u00e4chst mit dem Generator mr.bob generiert. Im Zuge der Generierung werden bereits Templates f\u00fcr funktionale Tests im Package angelegt. Ausserdem werden in der Datei setup.py des Packages die Abh\u00e4ngigkeiten zur Durchf\u00fchrung automatisierter Tests vermerkt. Um die automatisierten Tests ausf\u00fchren zu k\u00f6nnen m\u00fcssen diese Abh\u00e4ngigkeiten zun\u00e4chst installiert werden. Dazu muss folgende \u00c4nderung in der buildout.cfg vorgenommen werden: eggs = ... edi.substanceforms [test] Danach muss der Buildout mit dem Befehlt ./bin/buildout im Wurzelverzeichnis der Installation erneut durchgef\u00fchrt werden. Scope der Funktionstests Funktionstests im Web-CMS Plone verf\u00fcgen \u00fcber eine echte (objektorientierte) Datenbank und eine Komponentenarchitektur. Dar\u00fcber hinaus kann mit Python-Code ein Browser simuliert werden. Wenn mit dem Python-Browser auf eine Seite zugegriffen wird, ist die komplette Transaktionsmaschinerie von Plone im Einsatz. Damit dies funktioniert, verpackt die Testschicht die Datenbank in einen Demospeicher, der einen regul\u00e4ren Speicher kapselt. Wird von den Tests etwas in die Datenbank geschrieben, speichert der Demostorage es in tempor\u00e4ren Feldern des Arbeitsspeichers. Nach jedem Test wird der Demostorage gel\u00f6scht. Damit sollten die funktionalen Tests fast so schnell ablaufen wie Integrationstests oder gar Unit-Tests und das trotz des zus\u00e4tzliche Overheads, der durch das Durchlaufen der Plone-Transaktionsmaschine aufgebaut wird. Zu beachten ist dabei, dass der simulierte Browser reinen Python-Code darstellt. Javascript-Code kann somit im Rahmen der funktionalen Tests nicht getestet werden. Ebenso wurden die Datenbank-Transaktionen zur relationalen Datenbank auf Basis von PostgreSQL nicht in die Funktionstests einbezogen. Die tats\u00e4chliche Kundenkonfiguration wird erheblich von einer Test- oder Entwicklungskonfiguration abweichen. Die generische Implementierung der notwendigen technischen Voraussetzungen f\u00fcr die Installation und Konfiguration der Testumgebung ist nicht m\u00f6glich. Die in edi.substanceforms implementierten Funktionstests umfassen die folgenden Themen: fehlerfreie Installation des AddOns im Content-Management-System Plone Anlegen der Inhaltstypen Datenbank und Tabelle Assoziation der View- und Formklassen zu den Inhaltstypen Test-Verzeichnis im Package Alle f\u00fcr die Ausf\u00fchrung der Funktionstests mittels Testroboter ((plone.app.testrobot)[https://pypi.org/project/plone.app.robotframework/]) notwendigen Konfigurationsdateien sowie die Dateien mit den Funktionstests befinden sich im Verzeichnis ../src/edi/substanceforms/tests/.. : ...src/edi/substanceforms/tests$ ls -la total 132 drwxrwxr-x 4 plone_buildout plone_buildout 4096 Dec 4 13:03 . drwxrwxr-x 9 plone_buildout plone_buildout 4096 Dec 4 12:28 .. -rw-rw-r-- 1 plone_buildout plone_buildout 0 Nov 25 10:50 __init__.py drwxrwxr-x 2 plone_buildout plone_buildout 4096 Dec 4 10:45 __pycache__ drwxrwxr-x 2 plone_buildout plone_buildout 4096 Nov 25 10:50 robot -rw-rw-r-- 1 plone_buildout plone_buildout 3042 Nov 25 10:50 test_ct_datenbank.py ... -rw-rw-r-- 1 plone_buildout plone_buildout 1564 Dec 4 11:33 test_view_update_mixture-form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1539 Dec 4 11:33 test_view_update_powder_form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1570 Dec 4 11:33 test_view_update_substance-form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1518 Dec 4 11:33 test_view_update_view.py Ausf\u00fchrung der Tests Die Tests f\u00fcr edi.substanceforms k\u00f6nnen aus dem Buildout-Verzeichnis heraus mit dem folgenden Befehl ausgef\u00fchrt werden: $ ./bin/test edi.substanceforms ... Ran 65 tests with 0 failures, 0 errors, 0 skipped in 3.067 seconds. Tearing down left over layers: Tear down edi.substanceforms.testing.EdiSubstanceformsLayer:IntegrationTesting in 0.000 seconds. Tear down edi.substanceforms.testing.EdiSubstanceformsLayer in 0.004 seconds. Tear down plone.app.contenttypes.testing.PloneAppContenttypes in 0.020 seconds. Tear down plone.app.event.testing.PAEventLayer in 0.004 seconds. Tear down plone.app.testing.layers.PloneFixture in 0.028 seconds. Tear down plone.testing.zope.Startup in 0.003 seconds. Tear down plone.testing.zca.LayerCleanup in 0.001 seconds.","title":"Automatische Testverfahren"},{"location":"tests/#automatische-testverfahren","text":"Die Entwicklung von edi.substanceforms wurde im grunds\u00e4tzlichen Ansatz testgetrieben durchgef\u00fchrt. Wie im Kapitel \"Bestandteile\" beschrieben, wurden die Inhaltstypen Datenbank und Tabelle sowie alle Ansichten (Views) und Formulare (Forms) wurden zun\u00e4chst mit dem Generator mr.bob generiert. Im Zuge der Generierung werden bereits Templates f\u00fcr funktionale Tests im Package angelegt. Ausserdem werden in der Datei setup.py des Packages die Abh\u00e4ngigkeiten zur Durchf\u00fchrung automatisierter Tests vermerkt. Um die automatisierten Tests ausf\u00fchren zu k\u00f6nnen m\u00fcssen diese Abh\u00e4ngigkeiten zun\u00e4chst installiert werden. Dazu muss folgende \u00c4nderung in der buildout.cfg vorgenommen werden: eggs = ... edi.substanceforms [test] Danach muss der Buildout mit dem Befehlt ./bin/buildout im Wurzelverzeichnis der Installation erneut durchgef\u00fchrt werden.","title":"Automatische Testverfahren"},{"location":"tests/#scope-der-funktionstests","text":"Funktionstests im Web-CMS Plone verf\u00fcgen \u00fcber eine echte (objektorientierte) Datenbank und eine Komponentenarchitektur. Dar\u00fcber hinaus kann mit Python-Code ein Browser simuliert werden. Wenn mit dem Python-Browser auf eine Seite zugegriffen wird, ist die komplette Transaktionsmaschinerie von Plone im Einsatz. Damit dies funktioniert, verpackt die Testschicht die Datenbank in einen Demospeicher, der einen regul\u00e4ren Speicher kapselt. Wird von den Tests etwas in die Datenbank geschrieben, speichert der Demostorage es in tempor\u00e4ren Feldern des Arbeitsspeichers. Nach jedem Test wird der Demostorage gel\u00f6scht. Damit sollten die funktionalen Tests fast so schnell ablaufen wie Integrationstests oder gar Unit-Tests und das trotz des zus\u00e4tzliche Overheads, der durch das Durchlaufen der Plone-Transaktionsmaschine aufgebaut wird. Zu beachten ist dabei, dass der simulierte Browser reinen Python-Code darstellt. Javascript-Code kann somit im Rahmen der funktionalen Tests nicht getestet werden. Ebenso wurden die Datenbank-Transaktionen zur relationalen Datenbank auf Basis von PostgreSQL nicht in die Funktionstests einbezogen. Die tats\u00e4chliche Kundenkonfiguration wird erheblich von einer Test- oder Entwicklungskonfiguration abweichen. Die generische Implementierung der notwendigen technischen Voraussetzungen f\u00fcr die Installation und Konfiguration der Testumgebung ist nicht m\u00f6glich. Die in edi.substanceforms implementierten Funktionstests umfassen die folgenden Themen: fehlerfreie Installation des AddOns im Content-Management-System Plone Anlegen der Inhaltstypen Datenbank und Tabelle Assoziation der View- und Formklassen zu den Inhaltstypen","title":"Scope der Funktionstests"},{"location":"tests/#test-verzeichnis-im-package","text":"Alle f\u00fcr die Ausf\u00fchrung der Funktionstests mittels Testroboter ((plone.app.testrobot)[https://pypi.org/project/plone.app.robotframework/]) notwendigen Konfigurationsdateien sowie die Dateien mit den Funktionstests befinden sich im Verzeichnis ../src/edi/substanceforms/tests/.. : ...src/edi/substanceforms/tests$ ls -la total 132 drwxrwxr-x 4 plone_buildout plone_buildout 4096 Dec 4 13:03 . drwxrwxr-x 9 plone_buildout plone_buildout 4096 Dec 4 12:28 .. -rw-rw-r-- 1 plone_buildout plone_buildout 0 Nov 25 10:50 __init__.py drwxrwxr-x 2 plone_buildout plone_buildout 4096 Dec 4 10:45 __pycache__ drwxrwxr-x 2 plone_buildout plone_buildout 4096 Nov 25 10:50 robot -rw-rw-r-- 1 plone_buildout plone_buildout 3042 Nov 25 10:50 test_ct_datenbank.py ... -rw-rw-r-- 1 plone_buildout plone_buildout 1564 Dec 4 11:33 test_view_update_mixture-form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1539 Dec 4 11:33 test_view_update_powder_form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1570 Dec 4 11:33 test_view_update_substance-form.py -rw-rw-r-- 1 plone_buildout plone_buildout 1518 Dec 4 11:33 test_view_update_view.py","title":"Test-Verzeichnis im Package"},{"location":"tests/#ausfuhrung-der-tests","text":"Die Tests f\u00fcr edi.substanceforms k\u00f6nnen aus dem Buildout-Verzeichnis heraus mit dem folgenden Befehl ausgef\u00fchrt werden: $ ./bin/test edi.substanceforms ... Ran 65 tests with 0 failures, 0 errors, 0 skipped in 3.067 seconds. Tearing down left over layers: Tear down edi.substanceforms.testing.EdiSubstanceformsLayer:IntegrationTesting in 0.000 seconds. Tear down edi.substanceforms.testing.EdiSubstanceformsLayer in 0.004 seconds. Tear down plone.app.contenttypes.testing.PloneAppContenttypes in 0.020 seconds. Tear down plone.app.event.testing.PAEventLayer in 0.004 seconds. Tear down plone.app.testing.layers.PloneFixture in 0.028 seconds. Tear down plone.testing.zope.Startup in 0.003 seconds. Tear down plone.testing.zca.LayerCleanup in 0.001 seconds.","title":"Ausf\u00fchrung der Tests"},{"location":"zielsetzung/","text":"Zielsetzung Die Zielsetzung des Projekts besteht in der grunds\u00e4tzlichen Anpassung und Modernisierung der zugrunde liegenden Softwarearchitektur. Vor allem die Umstellung von einer objektorientierten Datenbank auf eine relationale Datenbank bildet eine wesentliche Zielsetzung des Projekts. Daneben soll f\u00fcr die Endbenutzer eine verbesserte und vor allem schnellere Recherche \u00fcber die in der Datenbank gespeicherten Chemikalienprodukte erm\u00f6glicht werden. Die redaktionelle Bearbeitung der Daten soll weiterhin \u00fcber das bestehende Web-Content-Management-System Plone erm\u00f6glicht werden. Im Rahmen eines Vorprojektes wurde ein ERM-Modell f\u00fcr eine relationale Datenbank entwickelt und anhand von Test-Datens\u00e4tzen erprobt. Au\u00dferdem wurden im Rahmen des Vorprojekts die technischen M\u00f6glichkeiten zur Migration der Daten aus der bestehenden objektorientierten Datenbank in die relationale Datenbank getestet. Die im Vorprojekt erzielten Ergebnisse wurden als Proof of Concept gesichert. Dementsprechend konnte in diesem Projekt auf die Ergebnisse des Vorprojekts sowohl in Form von Softwarebestandteilen als auch in Form von Dokumentation zur\u00fcckgegriffen werden.","title":"Zielsetzung"},{"location":"zielsetzung/#zielsetzung","text":"Die Zielsetzung des Projekts besteht in der grunds\u00e4tzlichen Anpassung und Modernisierung der zugrunde liegenden Softwarearchitektur. Vor allem die Umstellung von einer objektorientierten Datenbank auf eine relationale Datenbank bildet eine wesentliche Zielsetzung des Projekts. Daneben soll f\u00fcr die Endbenutzer eine verbesserte und vor allem schnellere Recherche \u00fcber die in der Datenbank gespeicherten Chemikalienprodukte erm\u00f6glicht werden. Die redaktionelle Bearbeitung der Daten soll weiterhin \u00fcber das bestehende Web-Content-Management-System Plone erm\u00f6glicht werden. Im Rahmen eines Vorprojektes wurde ein ERM-Modell f\u00fcr eine relationale Datenbank entwickelt und anhand von Test-Datens\u00e4tzen erprobt. Au\u00dferdem wurden im Rahmen des Vorprojekts die technischen M\u00f6glichkeiten zur Migration der Daten aus der bestehenden objektorientierten Datenbank in die relationale Datenbank getestet. Die im Vorprojekt erzielten Ergebnisse wurden als Proof of Concept gesichert. Dementsprechend konnte in diesem Projekt auf die Ergebnisse des Vorprojekts sowohl in Form von Softwarebestandteilen als auch in Form von Dokumentation zur\u00fcckgegriffen werden.","title":"Zielsetzung"},{"location":"includes/abbreviations/","text":"","title":"Abbreviations"}]}